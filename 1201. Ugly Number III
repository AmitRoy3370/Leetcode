class Solution {
    public int nthUglyNumber(int n, int a, int b, int c) {
        int ab = lcm(a,b);
        int bc = lcm(b,c);
        int ca = lcm(c,a);
        int abc = lcm(ab,c);
        
        int s = 1, e = 2000000000, m;
        int x;
        while(s<e){
            m = s/2 + e/2 +(s%2+e%2)/2;
            x = m/a + m/b + m/c - m/ab - m/bc - m/ca + m/abc;
            if(x>=n) e=m;
            else s=m+1;
        }
        
        return s;
    }
    
    public int lcm(int a, int b){
        if(a==Integer.MAX_VALUE || b==Integer.MAX_VALUE)return Integer.MAX_VALUE;
        int gcd = gcd(a, b);
        if(Integer.MAX_VALUE / (a/gcd) < b)return Integer.MAX_VALUE;
        return a / gcd * b;
    }
    
    public int gcd(int a, int b){
        if(b==0)return a;
        return gcd(b, a%b);
    }
}
