class Solution {

    public int minPathSum(int[][] grid) {
        
        int n = grid.length;
        int m = grid[0].length;

        int dp[][] = new int[n][m];

        for(int i = 0; i != n; ++i) {

            for(int j = 0; j != m; ++j) {

                dp[i][j] = grid[i][j];

            }

        }

        for(int i = n - 1; i >= 0; --i) {

            for(int j = m - 1; j >= 0; --j) {

                if(i == n - 1 && j == m - 1) {

                    continue;

                }

                if(j + 1 >= m) {

                    dp[i][j] = grid[i][j] + dp[i + 1][j];
                    continue;

                }

                if(i + 1 >= n) {

                    dp[i][j] = grid[i][j] + dp[i][j + 1];
                    continue;

                }

                dp[i][j] = grid[i][j] + Math.min(dp[i + 1][j], dp[i][j + 1]);

            }

        }

        //dp[n - 1][m - 1] = grid[n - 1][m - 1];

        return dp[0][0];

    }

}
