class Solution {

    int dp(int n, int m, int a[][], int dp[][]) {

        if(0 > n || 0 > m) {

            return 0;

        }
        
        if(a[n][m] == 1) {

            return 0;

        }

        if(n == 0 && m == 0) {

            return 1;

        }

        if(dp[n][m] != 0) {

            return dp[n][m];

        }

        return dp[n][m] = dp(n - 1, m, a, dp) + dp(n, m - 1, a, dp);

    }

    public int uniquePathsWithObstacles(int[][] a) {
        
        int n = a.length;
        int m = a[0].length;

        int dp[][]= new int[n][m];

        return dp(n - 1, m - 1, a, dp);

    }
}
