class Solution {
    
    long mod = (long)(1e9 + 7);

    long dp[];

    private long solve(int len, int high, long dp[], int low, int zero, int one) {

        if(len > high) {

            return 0L;

        }

        if(dp[len] != -1L) {

            return dp[len];

        }

        dp[len] = (len >= low ? 1 : 0);

        dp[len] += solve(len + zero, high, dp, low, zero, one) + solve(len +one, high, dp, low, zero, one);

        return dp[len] % mod;

    }

    public int countGoodStrings(int low, int high, int zero, int one) {
        
        dp = new long[high + 1];

        for(int i = 0; i != high + 1; ++i) {

            dp[i] = -1L;

        }

        return (int)solve(0, high, dp, low, zero, one);

    }
    
}
