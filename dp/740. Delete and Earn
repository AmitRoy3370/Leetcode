import java.util.Map;
import java.util.HashMap;

class Solution {

    public int deleteAndEarn(int[] a) {

        int n = a.length;

        if (n == 1) {

            return a[0];

        }

        Map<Integer, Integer> map = new HashMap<>();

        int sum = 0;

        for (int i : a) {

            sum += i;

            map.put(i, map.getOrDefault(i, 0) + 1);

        }

        // Arrays.sort(a);

        int N = (int)Math.pow(10, 4) + 1;

        int dp[] = new int[N + 5];

        /*
         * for(int i = 0; i != n; ++i) {
         * 
         * dp[i] = sum;
         * 
         * }
         */

        //dp[0] = a[0] * map.getOrDefault(a[0], 0);

        for (int i = 1; i < N; ++i) {

            if(i == 1) {

                dp[i] = i * map.getOrDefault(i, 0);
                continue;

            }

           dp[i] = dp[i - 2] + i * map.getOrDefault(i, 0);

           dp[i] = Math.max(dp[i], dp[i - 1]);

        }

        int max = 0;

        for (int i : dp) {

            max = Math.max(i, max);

        }

        //print(dp);

        return max;

    }

    void print(int dp[]) {

        for(int u : dp) {

            System.out.print(u + " ");

        }

        System.out.println();

    }
}
