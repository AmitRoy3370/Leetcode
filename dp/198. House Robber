class Solution {
    public int rob(int[] a) {

        if(a.length == 1) {

            return a[0];

        }

        if(a.length == 2) {

            return Math.max(a[0], a[1]);

        }

        int n = a.length;
        
        int dp[] = new int[n];

        dp[0] = a[0];
        dp[1] = a[1];

        for(int i = 2; i < n; ++i) {

            int sum = a[i];

            for(int j = i - 2; j >= 0; --j) {

                sum = Math.max(sum, a[i] + dp[j]);

            }

            dp[i] = Math.max(Math.max(sum, dp[i - 1]), Math.max(dp[i], dp[i - 2]));

        }

        print(dp);

        int max = dp[n - 1];

        for(int i = 0; i < n; ++i) {

            max = Math.max(max, dp[i]);

        }
 
        return max;

    }

    void print(int a[]) {

        for(int i : a) {

            System.out.print(i + " ");

        }

        System.out.println();

    }
}
