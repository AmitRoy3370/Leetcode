class Solution {
    
    public int way(int m, int n, int dp[][]) {

        if(0 >= m || 0 >= n) {

            return 0;

        }

        if(m == 1 && n == 1) {

            return 1;

        }

        if(dp[m][n] != 0) {

            return dp[m][n];

        }

        dp[m - 1][n] = way(m - 1, n, dp);
        dp[m][n - 1] = way(m, n - 1, dp);

        return dp[m][n] = dp[m - 1][n] + dp[m][n - 1];

    }

    public int uniquePaths(int m, int n) {
        
        int visited[][] = new int[m + 1][n + 1];

        //visited[m][n] = 1;

        return way(m, n, visited);

    }

}
