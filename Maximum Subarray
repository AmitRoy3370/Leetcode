import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Maximum_Subarray {

    static BufferedReader in=new BufferedReader( new InputStreamReader( System.in ) );
    
    static int calculate(int nums[],int n){
        
        if( n==1 ){
            
            return nums[0];
            
        }
        
        int m=n/2;
        
        int left_MSS=calculate( nums,m );
        
        int right_MSS=calculate( Arrays.copyOfRange(nums, m, nums.length ),n-m );
        
        int sum=0,left_Sum=Integer.MIN_VALUE,right_Sum=Integer.MIN_VALUE;
        
        for(int i=m;i<n;i++){
            
            sum+=nums[i];
            
            right_Sum=Math.max(sum, right_Sum );
            
        }
        
        sum=0;
        
        for(int i=m-1;i>=0;i--){
            
            sum+=nums[i];
            
            left_Sum=Math.max(left_Sum, sum);
            
        }
        
        int ans=Math.max(left_MSS, right_MSS);
        
        return Math.max(ans, left_Sum+right_Sum);
        
    }
    
     public static int maxSubArray(int[] nums) {
        
    return calculate( nums,nums.length );
         
    }
    
    public static void main(String[] args) throws IOException {
        
        String x[]=in.readLine().split("\\s");
        
        int nums[]=new int[x.length];
        
        for(int i=0;i<x.length;i++){
            
            nums[i]=Integer.parseInt( x[i] );
            
        }
        
        System.out.println( maxSubArray( nums ) );
        
    }
    
}
//3 -2 5 -1
